// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator erd {
  provider = "prisma-erd-generator"
}

model Earthquake {
  id              Int               @id @default(autoincrement())
  date            DateTime
  magnitude       Decimal
  depth           Decimal
  duration        Decimal
  intensity       Int
  fault_line      String
  after_shock_id  Int?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  Tsunami         Tsunami[]
  BuildingDamage  BuildingDamage[]
  EEWInfo         EEWInfo[]
  Landslide       Landslide[]
  SensorInfo SensorInfo[]
}

model Tsunami {
  id            Int        @id @default(autoincrement())
  region        String
  date          DateTime
  size          Decimal
  duration      Decimal
  earthquake_id Int
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  earthquake    Earthquake @relation(fields: [earthquake_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model BuildingDamage {
  id                   Int        @id @default(autoincrement())
  houses_damaged       Int
  houses_destroyed     Int
  commerical_damaged   Int
  commerical_destroyed Int
  earthquake_id        Int
  cost                 Decimal
  createdAt            DateTime   @default(now())
  updatedAt            DateTime   @updatedAt
  earthquake           Earthquake @relation(fields: [earthquake_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model EEWInfo {
  id              Int        @id @default(autoincrement())
  alert_triggered Boolean
  date            DateTime
  region          String
  duration        Decimal
  accuracy        Decimal
  earthquake_id   Int
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  earthquake      Earthquake @relation(fields: [earthquake_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Landslide {
  id            Int        @id @default(autoincrement())
  smallest      Decimal
  largest       Decimal
  region        String
  number        Int
  earthquake_id Int
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  earthquake    Earthquake @relation(fields: [earthquake_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model SensorInfo {
  id              Int               @id @default(autoincrement())
  location        String
  region          String
  sensor_type     SensorType        @default(ACCELEROMETER)
  activate        Boolean
  earthquake_id Int
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  earthquake    Earthquake @relation(fields: [earthquake_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

enum SensorType {
  ACCELEROMETER
  GEOPHONE
  OTHER
}

